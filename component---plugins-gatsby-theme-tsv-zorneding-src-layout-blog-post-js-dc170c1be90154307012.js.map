{"version":3,"sources":["webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./plugins/gatsby-theme-tsv-zorneding/src/components/seo/blog.js","webpack:///./plugins/gatsby-theme-tsv-zorneding/src/templates/blog-post.js","webpack:///./plugins/gatsby-theme-tsv-zorneding/src/layout/blog-post.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_createCompounder.js"],"names":["module","exports","object","key","undefined","Blog","props","type","content","push","renderJsonLdWebPage","fullUrl","this","url","slug","image","src","dangerouslyExposeHtml","jsonldtype","schema","author","description","headline","title","wordCount","abstract","dateCreated","date","datePublished","dateModified","publisher","getPublisher","mainEntityOfPage","name","itemListElement","position","Site","propTypes","PropTypes","string","isRequired","number","BlogPostTemplate","contentComponent","tags","featuredimage","PostContent","Content","className","imageInfo","alt","length","offset","count","map","tag","to","pageQuery","BlogPost","data","post","markdownRemark","frontmatter","excerpt","fields","site","siteMetadata","siteUrl","seoimage","childImageSharp","fixed","words","canonical","htmlAst","ComponentContent","date_formatted","asciiWords","hasUnicodeWord","toString","unicodeWords","pattern","guard","match","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord","RegExp","kebabCase","createCompounder","result","word","index","toLowerCase","deburrLetter","reLatin","reComboMark","replace","array","iteratee","accumulator","initAccum","reAsciiWord","reHasUnicodeWord","test","basePropertyOf","arrayReduce","deburr","reApos","callback"],"mappings":"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","file":"component---plugins-gatsby-theme-tsv-zorneding-src-layout-blog-post-js-dc170c1be90154307012.js","sourcesContent":["/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","import React from \"react\";\nimport { JSONLD, Generic } from \"react-structured-data\";\nimport Site from \"./site\";\nimport PropTypes from \"prop-types\";\n\nclass Blog extends Site {\n  type = \"article\";\n\n  constructor(props) {\n    super(props);\n    this.content.push(this.renderJsonLdWebPage());\n  }\n\n  renderJsonLdWebPage() {\n    const fullUrl = `${this.props.url}${this.props.slug}`;\n    const image = this.props.image\n      ? `${this.props.url}${this.props.image.src}`\n      : \"\";\n    return (\n      <div key=\"seo-blog-wrapper\">\n        <JSONLD dangerouslyExposeHtml={true} key={this.type}>\n          <Generic\n            type=\"blogPosting\"\n            jsonldtype=\"BlogPosting\"\n            schema={{\n              author: this.props.author,\n              description: this.props.description,\n              headline: this.props.title,\n              wordCount: this.props.wordCount,\n              abstract: this.props.description,\n              dateCreated: this.props.date,\n              datePublished: this.props.date,\n              dateModified: this.props.date,\n              publisher: this.getPublisher(),\n              mainEntityOfPage: {\n                \"@type\": \"Website\",\n                name: \"TSV Zorneding e.V. 1920\"\n              },\n              image: {\n                \"@type\": \"ImageObject\",\n                url: image\n              },\n              url: fullUrl\n            }}\n          />\n        </JSONLD>\n        <JSONLD key=\"seo-breadcrumb\">\n          <Generic\n            type=\"breadcrumbList\"\n            jsonldtype=\"BreadcrumbList\"\n            schema={{\n              itemListElement: [\n                {\n                  position: 2,\n                  \"@type\": \"ListItem\",\n                  \"@id\": fullUrl,\n                  name: this.props.title\n                }\n              ]\n            }}\n          ></Generic>\n        </JSONLD>\n      </div>\n    );\n  }\n}\n\nBlog.propTypes = {\n  ...Site.propTypes,\n  date: PropTypes.string.isRequired,\n  wordCount: PropTypes.number.isRequired\n};\n\nexport default Blog;\n","import React from \"react\";\nimport { kebabCase } from \"lodash\";\nimport Content from \"../components/content\";\nimport TeaserList from \"../components/teaser-list\";\nimport PreviewCompatibleImage from \"../components/preview-compatible-image\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { H1, H2, H4 } from \"../components/globals\";\n\nconst BlogPostTemplate = ({\n  content,\n  contentComponent,\n  tags,\n  title,\n  slug,\n  date,\n  featuredimage,\n  author\n}) => {\n  const PostContent = contentComponent || Content;\n  return (\n    <section>\n      <header className=\"main\">\n        <H1>{title}</H1>\n      </header>\n      <span className=\"image object main\">\n        <PreviewCompatibleImage\n          imageInfo={{\n            image: featuredimage,\n            alt: `featured image thumbnail for post ${title}`\n          }}\n        />\n      </span>\n      <PostContent content={content} />\n      <i>Veröffentlicht am {author ? `${date} von ${author}` : `${date}`}</i>\n      <hr />\n\n      {tags && tags.length ? (\n        <>\n          <H2>Mehr zum Thema</H2>\n          <TeaserList offset={0} count={6} tags={tags} slug={slug} />\n          <hr />\n          <H4>Schlagwörter:</H4>\n          <ul className=\"taglist\">\n            {tags.map(tag => (\n              <li key={tag + `tag`}>\n                <Link to={`/tag/${kebabCase(tag)}/`}>{tag}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : null}\n    </section>\n  );\n};\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  tags: PropTypes.array,\n  title: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  featuredimage: PropTypes.object,\n  author: PropTypes.string\n};\n\nexport default BlogPostTemplate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"./layout\";\nimport SEO from \"../components/seo/blog\";\nimport BlogPostTemplate from \"../templates/blog-post\";\nimport { ComponentContent } from \"../components/content\";\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n        slug={post.fields.slug}\n        url={data.site.siteMetadata.siteUrl}\n        image={\n          post.frontmatter.seoimage &&\n          post.frontmatter.seoimage.childImageSharp.fixed\n        }\n        author={post.frontmatter.author}\n        wordCount={post.wordCount.words}\n        date={post.frontmatter.date}\n        canonical={post.frontmatter.canonical}\n        key=\"seo\"\n      />\n\n      <BlogPostTemplate\n        content={post.htmlAst}\n        contentComponent={ComponentContent}\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n        slug={post.fields.slug}\n        date={post.frontmatter.date_formatted}\n        featuredimage={post.frontmatter.featuredimage}\n        author={post.frontmatter.author}\n        key=\"blog-template\"\n      />\n    </Layout>\n  );\n};\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object\n  })\n};\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 200)\n      htmlAst\n      fields {\n        slug\n      }\n      wordCount {\n        words\n      }\n      frontmatter {\n        date\n        date_formatted: date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n        title\n        tags\n        canonical\n        featuredimage {\n          childImageSharp {\n            fluid(\n              maxWidth: 1180\n              quality: 100\n              srcSetBreakpoints: [300, 600, 900, 1180]\n            ) {\n              ...GatsbyImageSharpFluid_withWebp_noBase64\n            }\n          }\n        }\n        author\n        seoimage: featuredimage {\n          childImageSharp {\n            fixed(width: 700, height: 400, quality: 100) {\n              src\n              width\n              height\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n"],"sourceRoot":""}