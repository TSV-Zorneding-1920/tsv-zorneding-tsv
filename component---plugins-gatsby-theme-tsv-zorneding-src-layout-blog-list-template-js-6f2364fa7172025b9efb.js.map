{"version":3,"sources":["webpack:///./plugins/gatsby-theme-tsv-zorneding/src/components/blog-roll.js","webpack:///./plugins/gatsby-theme-tsv-zorneding/src/layout/blog-list-template.js"],"names":["BlogRoll","render","posts","this","props","className","map","post","node","key","id","imageInfo","image","frontmatter","featuredimage","alt","title","link","fields","slug","to","date","excerpt","React","Component","BlogList","data","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","description","lang","pathname","rel","Array","from","length","_","i","blogListQuery"],"mappings":"uNAqDeA,E,gLA/CbC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMF,MAEzB,OACE,yBAAKG,UAAU,wBACZH,GACCA,EAAMI,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKH,UAAU,MAAMI,IAAKF,EAAKG,IAC7B,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAOL,EAAKM,YAAYC,cACxBC,IAAI,qCAAsCR,EAAKM,YAAYG,OAE7DX,UAAU,iBACVY,KAAMV,EAAKW,OAAOC,OAEpB,uBAAGd,UAAU,aACX,kBAAC,OAAD,CACEA,UAAU,mCACVe,GAAIb,EAAKW,OAAOC,MAEfZ,EAAKM,YAAYG,OAEpB,qCACA,0BAAMX,UAAU,+BACbE,EAAKM,YAAYQ,OAGtB,2BACGd,EAAKe,QACN,6BACA,6BACA,kBAAC,OAAD,CAAMjB,UAAU,SAASe,GAAIb,EAAKW,OAAOC,MAAzC,iB,GAjCOI,IAAMC,W,0FCERC,E,gLACnBxB,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMsB,KAAKxB,MAAMyB,MAD7B,EAG2BxB,KAAKC,MAAMwB,YAArCC,EAHD,EAGCA,YAAaC,EAHd,EAGcA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EACJJ,EAAc,GAAM,EAAI,QAAU,UAAYA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACElB,MAAM,uBACNoB,YAAY,uBACZC,KAAK,KACLC,SAAU,SAAWT,EAAYK,aAEnC,iCACE,4BAAQ7B,UAAU,QAChB,qDAEF,kBAAC,EAAD,CAAUH,MAAOA,IAEjB,wBAAIG,UAAU,cACZ,4BACI0B,EAKA,0BAAM1B,UAAU,mBAAhB,UAJA,kBAAC,OAAD,CAAMe,GAAIa,EAAUM,IAAI,OAAOlC,UAAU,UAAzC,WAQHmC,MAAMC,KAAK,CAAEC,OAAQZ,IAAY,SAACa,EAAGC,GAAJ,OAChC,wBAAInC,IAAG,qBAAsBmC,EAAI,IAC/B,kBAAC,OAAD,CACExB,GAAE,UAAiB,IAANwB,EAAU,GAAKA,EAAI,GAChCvC,UAAS,SAAUuC,EAAI,IAAMf,EAAc,SAAW,KAErDe,EAAI,OAKX,4BACIZ,EAKA,0BAAM3B,UAAU,mBAAhB,WAJA,kBAAC,OAAD,CAAMe,GAAE,SAAWe,EAAYI,IAAI,OAAOlC,UAAU,UAApD,gB,GAjDsBkB,IAAMC,WA+D/BqB,EAAa","file":"component---plugins-gatsby-theme-tsv-zorneding-src-layout-blog-list-template-js-6f2364fa7172025b9efb.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport PreviewCompatibleImage from \"./preview-compatible-image\";\n\nclass BlogRoll extends React.Component {\n  render() {\n    const posts = this.props.posts;\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"box\" key={post.id}>\n              <PreviewCompatibleImage\n                imageInfo={{\n                  image: post.frontmatter.featuredimage,\n                  alt: `featured image thumbnail for post ${post.frontmatter.title}`\n                }}\n                className=\"image left fit\"\n                link={post.fields.slug}\n              />\n              <p className=\"post-meta\">\n                <Link\n                  className=\"title has-text-primary is-size-4\"\n                  to={post.fields.slug}\n                >\n                  {post.frontmatter.title}\n                </Link>\n                <span> &bull; </span>\n                <span className=\"subtitle is-size-5 is-block\">\n                  {post.frontmatter.date}\n                </span>\n              </p>\n              <p>\n                {post.excerpt}\n                <br />\n                <br />\n                <Link className=\"button\" to={post.fields.slug}>\n                  Mehr →\n                </Link>\n              </p>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nBlogRoll.propTypes = {\n  posts: PropTypes.array\n};\n\nexport default BlogRoll;\n","import React from \"react\";\nimport Layout from \"./layout\";\nimport { SEO } from \"gatsby-theme-seo\";\nimport BlogRoll from \"../components/blog-roll\";\nimport { graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.posts.edges;\n\n    const { currentPage, numPages } = this.props.pageContext;\n    const isFirst = currentPage === 1;\n    const isLast = currentPage === numPages;\n    const prevPage =\n      currentPage - 1 === 1 ? \"/blog\" : \"/blog/\" + (currentPage - 1).toString();\n    const nextPage = (currentPage + 1).toString();\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Aktuelle Neuigkeiten\"\n          description=\"Aktuelle Neuigkeiten\"\n          lang=\"de\"\n          pathname={\"/blog/\" + currentPage.toString()}\n        />\n        <section>\n          <header className=\"main\">\n            <h1>Aktuelle Neuigkeiten</h1>\n          </header>\n          <BlogRoll posts={posts} />\n\n          <ul className=\"pagination\">\n            <li>\n              {!isFirst ? (\n                <Link to={prevPage} rel=\"prev\" className=\"button\">\n                  Zurück\n                </Link>\n              ) : (\n                <span className=\"button disabled\">Zurück</span>\n              )}\n            </li>\n\n            {Array.from({ length: numPages }, (_, i) => (\n              <li key={`pagination-number${i + 1}`}>\n                <Link\n                  to={`/blog/${i === 0 ? \"\" : i + 1}`}\n                  className={`page ${i + 1 === currentPage ? \"active\" : \"\"}`}\n                >\n                  {i + 1}\n                </Link>\n              </li>\n            ))}\n\n            <li>\n              {!isLast ? (\n                <Link to={`/blog/${nextPage}`} rel=\"next\" className=\"button\">\n                  Nächste\n                </Link>\n              ) : (\n                <span className=\"button disabled\">Nächste</span>\n              )}\n            </li>\n          </ul>\n        </section>\n      </Layout>\n    );\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    posts: allMarkdownRemark(\n      sort: {\n        order: [DESC, DESC]\n        fields: [frontmatter___sticky, frontmatter___date]\n      }\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 300)\n          frontmatter {\n            date(formatString: \"DD. MMMM YYYY\", locale: \"de\")\n            title\n            templateKey\n            sticky\n            featured\n            tags\n            featuredimage {\n              childImageSharp {\n                fluid(\n                  maxWidth: 500\n                  maxHeight: 300\n                  srcSetBreakpoints: [350, 500]\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_noBase64\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}