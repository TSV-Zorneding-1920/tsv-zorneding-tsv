{"version":3,"sources":["webpack:///./plugins/gatsby-theme-tsv-zorneding/src/layout/tag.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","key","node","fields","slug","to","frontmatter","title","tag","pageContext","site","siteMetadata","tagHeader","totalCount","className","description","url","siteUrl","author","style","marginBottom","React","Component"],"mappings":"mMAMMA,E,kGACJC,OAAA,WACE,IACMC,EADQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACxBC,KAAI,SAAAC,GAAI,OAC9B,kBAAIC,IAAKD,EAAKE,KAAKC,OAAOC,MACxB,YAAC,OAAD,CAAMC,GAAIL,EAAKE,KAAKC,OAAOC,MACzB,YAAC,IAAD,KAAKJ,EAAKE,KAAKI,YAAYC,YAI3BC,EAAMd,KAAKC,MAAMc,YAAYD,IAC7BD,EAAQb,KAAKC,MAAMC,KAAKc,KAAKC,aAAaJ,MAE1CK,EADalB,KAAKC,MAAMC,KAAKC,kBAAkBgB,WACtC,gCAAgDL,EAAhD,IAEf,OACE,YAAC,IAAD,KACE,uBAASM,UAAU,WACjB,YAAC,IAAD,CACEP,MAAUC,EAAL,MAAcD,EACnBQ,YAAgBP,EAAL,MAAcD,EACzBS,IAAKtB,KAAKC,MAAMC,KAAKc,KAAKC,aAAaM,QACvCb,KAAM,QACNc,OAAQxB,KAAKC,MAAMC,KAAKc,KAAKC,aAAaO,SAE5C,mBAAKJ,UAAU,qBACb,mBAAKA,UAAU,WACb,mBACEA,UAAU,2BACVK,MAAO,CAAEC,aAAc,SAEvB,YAAC,IAAD,KAAKR,GACL,sBAAKnB,GACL,qBACE,YAAC,OAAD,CAAMY,GAAG,UAAT,wC,GAlCKgB,IAAMC,WA6Cd/B","file":"component---plugins-gatsby-theme-tsv-zorneding-src-layout-tag-js-5b2904454c88390f0c1a.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"./layout\";\nimport SEO from \"../components/seo/site\";\nimport { H2, H3 } from \"../components/globals\";\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges;\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <H2>{post.node.frontmatter.title}</H2>\n        </Link>\n      </li>\n    ));\n    const tag = this.props.pageContext.tag;\n    const title = this.props.data.site.siteMetadata.title;\n    const totalCount = this.props.data.allMarkdownRemark.totalCount;\n    const tagHeader = `${totalCount} Artikel mit dem Schlagwort “${tag}”`;\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <SEO\n            title={`${tag} | ${title}`}\n            description={`${tag} | ${title}`}\n            url={this.props.data.site.siteMetadata.siteUrl}\n            slug={\"/tags\"}\n            author={this.props.data.site.siteMetadata.author}\n          />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: \"6rem\" }}\n              >\n                <H3>{tagHeader}</H3>\n                <ul>{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">Alle Schlagwörter durchsuchen</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n\nexport default TagRoute;\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}